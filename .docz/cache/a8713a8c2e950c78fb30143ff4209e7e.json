{"remainingRequest":"/Users/vitor.paes/Development/packages/sagan/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",[\"/Users/vitor.paes/Development/packages/sagan/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"styled-components\",\"react-docgen\",[\"module-resolver\",{\"root\":[\"./src/**\"],\"alias\":{}}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/vitor.paes/Development/packages/sagan/src/Alert/Alert.js","dependencies":[{"path":"/Users/vitor.paes/Development/packages/sagan/src/Alert/Alert.js","mtime":1536120529354},{"path":"/Users/vitor.paes/Development/packages/sagan/node_modules/cache-loader/dist/cjs.js","mtime":1536173231817},{"path":"/Users/vitor.paes/Development/packages/sagan/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport alertColors from \"./utils/alertColors\";\nimport toPx from \"../utils/shared/toPx\";\nimport defaultTheme from \"../config/theme\"; // import IconClose from '@material-ui/icons/Close'\n// Defines colors config for alertColors()\n\nvar colorsConfig = {\n  backgroundWeight: 'is300',\n  borderWeight: 'is700'\n};\nvar SaganAlert = styled.div.withConfig({\n  displayName: \"Alert__SaganAlert\"\n})([\"\", \"\"], function (context) {\n  return css([\"padding:15px;border-radius:2px;border-left:6px solid;\", \" display:flex;font-size:\", \";align-items:center;.alert-label{flex:1;}.alert-dismiss{display:flex;cursor:pointer;font-size:14px;line-height:0;font-weight:bold;border-radius:50%;padding:3px;svg{font-size:18px}}\"], alertColors(context, colorsConfig), toPx(context.theme.alertFontSize || defaultTheme.alert.font.size));\n});\n\nvar Alert = function Alert(props) {\n  return React.createElement(SaganAlert, props, React.createElement(\"div\", {\n    className: \"alert-label\"\n  }, props.text), props.showDismiss ? React.createElement(\"div\", {\n    onClick: function onClick() {\n      return props.dismissAction();\n    },\n    className: \"alert-dismiss\"\n  }, \"x\") : null);\n};\n\nAlert.defaultProps = {\n  text: 'No Text',\n  dismissAction: function dismissAction() {\n    return window.alert('Alert Dismiss');\n  },\n  type: 'success',\n  showDismiss: true\n};\nexport default Alert;\nAlert.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Alert\",\n  \"props\": {\n    \"text\": {\n      \"defaultValue\": {\n        \"value\": \"'No Text'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Alert Label\"\n    },\n    \"dismissAction\": {\n      \"defaultValue\": {\n        \"value\": \"() => window.alert('Alert Dismiss')\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Dismiss button action\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'success'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'danger'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Alert color type\"\n    },\n    \"showDismiss\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Show dismiss button\"\n    }\n  }\n};\nAlert.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Alert\",\n  \"props\": {\n    \"text\": {\n      \"defaultValue\": {\n        \"value\": \"'No Text'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Alert Label\"\n    },\n    \"dismissAction\": {\n      \"defaultValue\": {\n        \"value\": \"() => window.alert('Alert Dismiss')\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Dismiss button action\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'success'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'danger'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Alert color type\"\n    },\n    \"showDismiss\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Show dismiss button\"\n    }\n  }\n};",{"version":3,"sources":["/Users/vitor.paes/Development/packages/sagan/src/Alert/Alert.js"],"names":["React","styled","css","alertColors","toPx","defaultTheme","colorsConfig","backgroundWeight","borderWeight","SaganAlert","div","context","theme","alertFontSize","alert","font","size","Alert","props","text","showDismiss","dismissAction","defaultProps","window","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP,wB,CACA;AAEA;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,OADD;AAEjBC,EAAAA,YAAY,EAAE;AAFG,CAArB;AAKA,IAAMC,UAAU,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA,aACV,UAAAC,OAAO;AAAA,SAAIT,GAAJ,gRAIHC,WAAW,CAACQ,OAAD,EAAUL,YAAV,CAJR,EAMQF,IAAI,CAACO,OAAO,CAACC,KAAR,CAAcC,aAAd,IAA+BR,YAAY,CAACS,KAAb,CAAmBC,IAAnB,CAAwBC,IAAxD,CANZ;AAAA,CADG,CAAhB;;AA4BA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAAI,oBAAC,UAAD,EAAgBA,KAAhB,EACnB;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BA,KAAK,CAACC,IAApC,CADmB,EAElBD,KAAK,CAACE,WAAN,GAAoB;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMF,KAAK,CAACG,aAAN,EAAN;AAAA,KAAd;AAA2C,IAAA,SAAS,EAAC;AAArD,SAApB,GAAmG,IAFjF,CAAJ;AAAA,CAAnB;;AAqBAJ,KAAK,CAACK,YAAN,GAAqB;AACjBH,EAAAA,IAAI,EAAE,SADW;AAEjBE,EAAAA,aAAa,EAAE;AAAA,WAAME,MAAM,CAACT,KAAP,CAAa,eAAb,CAAN;AAAA,GAFE;AAGjBU,EAAAA,IAAI,EAAE,SAHW;AAIjBJ,EAAAA,WAAW,EAAE;AAJI,CAArB;AAOA,eAAeH,KAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\nimport alertColors from 'Alert/utils/alertColors'\nimport toPx from 'utils/shared/toPx'\nimport defaultTheme from 'config/theme'\n// import IconClose from '@material-ui/icons/Close'\n\n// Defines colors config for alertColors()\nconst colorsConfig = {\n    backgroundWeight: 'is300',\n    borderWeight: 'is700'\n}\n\nconst SaganAlert = styled.div`\n    ${context => css`\n        padding: 15px;\n        border-radius: 2px;\n        border-left: 6px solid;\n        ${alertColors(context, colorsConfig)}\n        display: flex;\n        font-size: ${toPx(context.theme.alertFontSize || defaultTheme.alert.font.size)};\n        align-items: center;\n\n        .alert-label {\n          flex: 1;\n        }\n\n        .alert-dismiss {\n            display: flex;\n            cursor: pointer;\n            /* border: 1px solid #fff; */\n            font-size: 14px;\n            line-height: 0;\n            font-weight: bold;\n            border-radius: 50%;\n            padding: 3px;\n            svg { font-size: 18px }\n        }\n    `}\n`\n\nconst Alert = props => <SaganAlert {...props}>\n    <div className='alert-label'>{props.text}</div>\n    {props.showDismiss ? <div onClick={() => props.dismissAction()} className='alert-dismiss'>x</div> : null}\n</SaganAlert>\n\nAlert.propTypes = {\n    /** Alert Label */\n    text: PropTypes.string.isRequired,\n    /** Alert color type */\n    type: PropTypes.oneOf([\n        'success',\n        'danger',\n        'warning',\n        'info'\n    ]),\n    /** Show dismiss button */\n    showDismiss: PropTypes.bool,\n    /** Dismiss button action */\n    dismissAction: PropTypes.func\n}\n\nAlert.defaultProps = {\n    text: 'No Text',\n    dismissAction: () => window.alert('Alert Dismiss'),\n    type: 'success',\n    showDismiss: true\n}\n\nexport default Alert\n"]}]}