{"remainingRequest":"/Users/vitor.paes/Development/packages/sagan/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"@babel/preset-env\",{\"modules\":false}],\"@babel/preset-react\",[\"/Users/vitor.paes/Development/packages/sagan/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"styled-components\",\"react-docgen\",[\"module-resolver\",{\"root\":[\"./src/**\"],\"alias\":{}}],\"/Users/vitor.paes/Development/packages/sagan/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js","dependencies":[{"path":"/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js","mtime":1536108488337},{"path":"/Users/vitor.paes/Development/packages/sagan/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/vitor.paes/Development/packages/sagan/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatButton from \"./types/FlatButton\";\nimport InvertedButton from \"./types/InvertedButton\";\n\nvar Button = function Button(props) {\n  return props.inverted ? React.createElement(InvertedButton, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), props.label) : React.createElement(FlatButton, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), props.label);\n};\n\nButton.propTypes = {\n  /** Button label */\n  label: PropTypes.string.isRequired,\n\n  /**\n   * Button color types\n   */\n  type: PropTypes.oneOf(['primary', 'secondary', 'success', 'danger', 'warning', 'info']),\n\n  /**\n   * Button corner types\n   */\n  corners: PropTypes.oneOf(['rounded', 'pill', 'none']),\n\n  /**\n   * Button sizes\n   */\n  size: PropTypes.oneOf(['small', 'large', 'medium']),\n\n  /**\n   * Invert button colors\n   */\n  inverted: PropTypes.bool,\n\n  /**\n   * Make button fluid\n   */\n  fluid: PropTypes.bool\n};\nButton.defaultProps = {\n  label: 'No label',\n  type: 'primary',\n  corners: 'none',\n  size: 'medium',\n  inverted: false,\n  fluid: false\n};\nvar _default = Button;\nexport default _default;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"'No label'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Button label\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'primary'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'secondary'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'danger'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button color types\"\n    },\n    \"corners\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'rounded'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'pill'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'none'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button corner types\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button sizes\"\n    },\n    \"inverted\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Invert button colors\"\n    },\n    \"fluid\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Make button fluid\"\n    }\n  }\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js\");\n  leaveModule(module);\n})();\n\n;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"'No label'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Button label\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'primary'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'secondary'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'danger'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button color types\"\n    },\n    \"corners\": {\n      \"defaultValue\": {\n        \"value\": \"'none'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'rounded'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'pill'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'none'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button corner types\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button sizes\"\n    },\n    \"inverted\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Invert button colors\"\n    },\n    \"fluid\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Make button fluid\"\n    }\n  }\n};",{"version":3,"sources":["/Users/vitor.paes/Development/packages/sagan/src/Button/Button.js"],"names":["React","PropTypes","FlatButton","InvertedButton","Button","props","inverted","label","propTypes","string","isRequired","type","oneOf","corners","size","bool","fluid","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,QAAN,GACpB,oBAAC,cAAD,oBAAoBD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA4BA,KAAK,CAACE,KAAlC,CADoB,GAEpB,oBAAC,UAAD,oBAAgBF,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBA,KAAK,CAACE,KAA9B,CAFgB;AAAA,CAApB;;AAIAH,MAAM,CAACI,SAAP,GAAmB;AACjB;AACAD,EAAAA,KAAK,EAAEN,SAAS,CAACQ,MAAV,CAAiBC,UAFP;;AAGjB;;;AAGAC,EAAAA,IAAI,EAAEV,SAAS,CAACW,KAAV,CAAgB,CACpB,SADoB,EAEpB,WAFoB,EAGpB,SAHoB,EAIpB,QAJoB,EAKpB,SALoB,EAMpB,MANoB,CAAhB,CANW;;AAcjB;;;AAGAC,EAAAA,OAAO,EAAEZ,SAAS,CAACW,KAAV,CAAgB,CACvB,SADuB,EAEvB,MAFuB,EAGvB,MAHuB,CAAhB,CAjBQ;;AAsBjB;;;AAGAE,EAAAA,IAAI,EAAEb,SAAS,CAACW,KAAV,CAAgB,CACpB,OADoB,EAEpB,OAFoB,EAGpB,QAHoB,CAAhB,CAzBW;;AA8BjB;;;AAGAN,EAAAA,QAAQ,EAAEL,SAAS,CAACc,IAjCH;;AAkCjB;;;AAGAC,EAAAA,KAAK,EAAEf,SAAS,CAACc;AArCA,CAAnB;AAwCAX,MAAM,CAACa,YAAP,GAAsB;AACpBV,EAAAA,KAAK,EAAE,UADa;AAEpBI,EAAAA,IAAI,EAAE,SAFc;AAGpBE,EAAAA,OAAO,EAAE,MAHW;AAIpBC,EAAAA,IAAI,EAAE,QAJc;AAKpBR,EAAAA,QAAQ,EAAE,KALU;AAMpBU,EAAAA,KAAK,EAAE;AANa,CAAtB;eASeZ,M;AAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BArDMA,M","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport FlatButton from './types/FlatButton'\nimport InvertedButton from './types/InvertedButton'\n\nconst Button = props => props.inverted\n  ? <InvertedButton {...props}>{props.label}</InvertedButton>\n  : <FlatButton {...props}>{props.label}</FlatButton>\n\nButton.propTypes = {\n  /** Button label */\n  label: PropTypes.string.isRequired,\n  /**\n   * Button color types\n   */\n  type: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info'\n  ]),\n  /**\n   * Button corner types\n   */\n  corners: PropTypes.oneOf([\n    'rounded',\n    'pill',\n    'none'\n  ]),\n  /**\n   * Button sizes\n   */\n  size: PropTypes.oneOf([\n    'small',\n    'large',\n    'medium'\n  ]),\n  /**\n   * Invert button colors\n   */\n  inverted: PropTypes.bool,\n  /**\n   * Make button fluid\n   */\n  fluid: PropTypes.bool\n}\n\nButton.defaultProps = {\n  label: 'No label',\n  type: 'primary',\n  corners: 'none',\n  size: 'medium',\n  inverted: false,\n  fluid: false\n}\n\nexport default Button\n"]}]}